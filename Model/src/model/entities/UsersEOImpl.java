package model.entities;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Jan 12 23:44:55 PST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UsersEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        UserId,
        FirstName,
        MiddleName,
        LastName,
        Username,
        Password,
        Email,
        Mobile,
        UserType,
        Tasks,
        Tasks1;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int USERID = AttributesEnum.UserId.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int MIDDLENAME = AttributesEnum.MiddleName.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int USERNAME = AttributesEnum.Username.index();
    public static final int PASSWORD = AttributesEnum.Password.index();
    public static final int EMAIL = AttributesEnum.Email.index();
    public static final int MOBILE = AttributesEnum.Mobile.index();
    public static final int USERTYPE = AttributesEnum.UserType.index();
    public static final int TASKS = AttributesEnum.Tasks.index();
    public static final int TASKS1 = AttributesEnum.Tasks1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UsersEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entities.UsersEO");
    }


    /**
     * Gets the attribute value for UserId, using the alias name UserId.
     * @return the value of UserId
     */
    public DBSequence getUserId() {
        return (DBSequence) getAttributeInternal(USERID);
    }


    /**
     * Gets the attribute value for FirstName, using the alias name FirstName.
     * @return the value of FirstName
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FirstName.
     * @param value value to set the FirstName
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for MiddleName, using the alias name MiddleName.
     * @return the value of MiddleName
     */
    public String getMiddleName() {
        return (String) getAttributeInternal(MIDDLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for MiddleName.
     * @param value value to set the MiddleName
     */
    public void setMiddleName(String value) {
        setAttributeInternal(MIDDLENAME, value);
    }

    /**
     * Gets the attribute value for LastName, using the alias name LastName.
     * @return the value of LastName
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastName.
     * @param value value to set the LastName
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for Username, using the alias name Username.
     * @return the value of Username
     */
    public String getUsername() {
        return (String) getAttributeInternal(USERNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Username.
     * @param value value to set the Username
     */
    public void setUsername(String value) {
        setAttributeInternal(USERNAME, value);
    }

    /**
     * Gets the attribute value for Password, using the alias name Password.
     * @return the value of Password
     */
    public String getPassword() {
        return (String) getAttributeInternal(PASSWORD);
    }

    /**
     * Sets <code>value</code> as the attribute value for Password.
     * @param value value to set the Password
     */
    public void setPassword(String value) {
        setAttributeInternal(PASSWORD, value);
    }

    /**
     * Gets the attribute value for Email, using the alias name Email.
     * @return the value of Email
     */
    public String getEmail() {
        return (String) getAttributeInternal(EMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for Email.
     * @param value value to set the Email
     */
    public void setEmail(String value) {
        setAttributeInternal(EMAIL, value);
    }

    /**
     * Gets the attribute value for Mobile, using the alias name Mobile.
     * @return the value of Mobile
     */
    public String getMobile() {
        return (String) getAttributeInternal(MOBILE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Mobile.
     * @param value value to set the Mobile
     */
    public void setMobile(String value) {
        setAttributeInternal(MOBILE, value);
    }

    /**
     * Gets the attribute value for UserType, using the alias name UserType.
     * @return the value of UserType
     */
    public String getUserType() {
        return (String) getAttributeInternal(USERTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for UserType.
     * @param value value to set the UserType
     */
    public void setUserType(String value) {
        setAttributeInternal(USERTYPE, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTasks() {
        return (RowIterator) getAttributeInternal(TASKS);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTasks1() {
        return (RowIterator) getAttributeInternal(TASKS1);
    }


    /**
     * @param userId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence userId) {
        return new Key(new Object[] { userId });
    }

    @Override
    protected void initDefaults() {
        // TODO Implement this method
        super.initDefaults();
        
        SequenceImpl seq = new SequenceImpl("USERS_SEQ", getDBTransaction());
        DBSequence dbseq = new DBSequence(seq.getSequenceNumber());
        populateAttributeAsChanged(USERID, dbseq);
    }

}

